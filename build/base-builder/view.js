(()=>{"use strict";var t,e={660:(t,e,a)=>{const n=window.React;var i=a.n(n);const s=window.ReactDOM;var r=a.n(s);const l=window.wp.element,c=(0,l.forwardRef)((t,e)=>{const{className:a,...i}=t,s=a?`chubes-game-window ${a}`:"chubes-game-window";return(0,n.createElement)("div",{...i,className:s,ref:e},t.children)}),o={basic:{id:"basic",name:"Basic Enemy",health:100,damage:10,speed:.02,color:"#e74c3c",borderColor:"#c0392b",attackColor:"#ff6b6b",attackBorderColor:"#e55353",attackCooldown:1500,size:.6,points:1,spawnWeight:10},fast:{id:"fast",name:"Fast Enemy",health:60,damage:8,speed:.035,color:"#f39c12",borderColor:"#d68910",attackColor:"#ffcc29",attackBorderColor:"#f4b942",attackCooldown:1200,size:.5,points:2,spawnWeight:3},heavy:{id:"heavy",name:"Heavy Enemy",health:200,damage:20,speed:.01,color:"#8e44ad",borderColor:"#6c3483",attackColor:"#bb6bd9",attackBorderColor:"#a569bd",attackCooldown:2e3,size:.8,points:3,spawnWeight:2}},h=t=>o[t];class d{static handleAttack(t,e,a={}){const n=Date.now(),i=h(t.type).attackCooldown;if("attacking"===t.state&&n-t.lastAttackTime>i)return{...t,isAttacking:!0,attackAnimationProgress:0,lastAttackTime:n};if(t.isAttacking){const n=.15,i=Math.min(1,t.attackAnimationProgress+n);if(i>=1){const n=t.currentTarget;return n&&(e(n.id,t.damage),"wall"===n.type&&a.spikeDamage>0)?{...t,health:Math.max(0,t.health-a.spikeDamage),isActive:t.health-a.spikeDamage>0,isAttacking:!1,attackAnimationProgress:0}:{...t,isAttacking:!1,attackAnimationProgress:0}}return{...t,attackAnimationProgress:i}}return t}static damageEnemy(t,e,a){const n=Math.max(0,t.health-e);return n<=0&&t.health>0&&a(t),{...t,health:n,isActive:n>0}}static getAttackAnimationOffset(t,e,a){if(!t.isAttacking||t.attackAnimationProgress<=0)return{x:0,y:0};const n=t.attackAnimationProgress;let i=0;i=n<=.5?2*n*3:2*(1-n)*3;let s=0,r=0;if(t.currentTarget)s=t.currentTarget.x>t.x?1:-1,r=t.currentTarget.y>t.y?1:-1;else{const n=a/2;s=e/2>t.x?1:-1,r=n>t.y?1:-1}return{x:s*i,y:r*i}}}function u(t,e,a,n,i,s,r=4){const l=Math.max(0,Math.min(i/s,1));t.fillStyle="#333",t.fillRect(e,a,n,r);let c="#2ecc71";l<.3?c="#e74c3c":l<.6&&(c="#f39c12"),t.fillStyle=c,t.fillRect(e,a,n*l,r)}class g{static renderEnemy(t,e,a,n,i,s,r){if(!t.isActive)return;const l=h(t.type);let c=a+t.x*i,o=n+t.y*i;const u=d.getAttackAnimationOffset(t,s,r);c+=u.x,o+=u.y;const g=i*l.size,m=(i-g)/2,f=t.isAttacking?l.attackColor:l.color,y=t.isAttacking?l.attackBorderColor:l.borderColor;e.fillStyle=f,e.fillRect(c+m,o+m,g,g),e.strokeStyle=y,e.lineWidth=1,e.strokeRect(c+m,o+m,g,g),this.renderHealthBar(t,e,c,o,i),"basic"!==t.type&&this.renderTypeIndicator(t,l,e,c,o,i)}static renderHealthBar(t,e,a,n,i){t.health>=t.maxHealth||u(e,a+4,n+i-2,i-8,t.health,t.maxHealth,3)}static renderTypeIndicator(t,e,a,n,i,s){const r=n+s-6-2,l=i+2;switch(a.fillStyle="white",a.strokeStyle="#333",a.lineWidth=1,t.type){case"fast":a.beginPath(),a.moveTo(r+3,l),a.lineTo(r,l+6),a.lineTo(r+6,l+6),a.closePath(),a.fill(),a.stroke();break;case"heavy":a.fillRect(r,l,6,6),a.strokeRect(r,l,6,6);break;default:a.beginPath(),a.arc(r+3,l+3,3,0,2*Math.PI),a.fill(),a.stroke()}}static renderAllEnemies(t,e,a,n,i,s,r){t.forEach(t=>{this.renderEnemy(t,e,a,n,i,s,r)})}static renderEnemyPath(t,e,a,n,i){t.path&&0!==t.path.length&&(e.strokeStyle="rgba(255, 255, 0, 0.3)",e.lineWidth=2,e.beginPath(),e.moveTo(a+t.x*i+i/2,n+t.y*i+i/2),t.path.forEach(t=>{e.lineTo(a+t.x*i+i/2,n+t.y*i+i/2)}),e.stroke())}}class m{constructor(t,e){this.gridWidth=t,this.gridHeight=e}findPath(t,e,a){const n=[{...t,g:0,h:this.manhattan(t,e),f:0,parent:null}];n[0].f=n[0].h;const i=new Set,s=new Map;for(;n.length;){let t=0;for(let e=1;e<n.length;e++)n[e].f<n[t].f&&(t=e);const r=n.splice(t,1)[0],l=`${r.x},${r.y}`;if(i.add(l),r.x===e.x&&r.y===e.y){let t=r;const e=[];for(;t;){e.unshift({x:t.x,y:t.y});const a=`${t.x},${t.y}`;t=s.get(a)}return e.slice(1)}for(const t of this.getNeighbors(r,a)){const a=`${t.x},${t.y}`;if(i.has(a))continue;const l=r.g+1,c=n.find(e=>e.x===t.x&&e.y===t.y);if(c)l<c.g&&(c.g=l,c.f=l+c.h,c.parent=r,s.set(a,r));else{const i=this.manhattan(t,e);n.push({...t,g:l,h:i,f:l+i,parent:r}),s.set(a,r)}}}return[]}calculatePath(t,e,a){const n=new Set;a.forEach(t=>{t.isActive&&(t.cells?t.cells.forEach(t=>n.add(`${t.x},${t.y}`)):n.add(`${t.x},${t.y}`))});const i={x:Math.floor(t.x),y:Math.floor(t.y)},s={x:Math.round(e.x),y:Math.round(e.y)};if(n.has(`${i.x},${i.y}`))return[];const r=this.findPath(i,s,n);if(r.length>1){r[0];const t=r[1];this.isStepClear(i,t,n)&&r.shift()}return r}manhattan(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}getNeighbors(t,e){const a=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:1},{x:1,y:-1},{x:-1,y:1},{x:-1,y:-1}],n=[];for(const i of a){const a=t.x+i.x,s=t.y+i.y;if(!(a<0||s<0||a>=this.gridWidth||s>=this.gridHeight||e.has(`${a},${s}`))){if(0!==i.x&&0!==i.y){const a=`${t.x+i.x},${t.y}`,n=`${t.x},${t.y+i.y}`;if(e.has(a)&&e.has(n))continue}n.push({x:a,y:s})}}return n}isStepClear(t,e,a){if(a.has(`${e.x},${e.y}`))return!1;const n=e.x-t.x,i=e.y-t.y;if(Math.abs(n)>1||Math.abs(i)>1)return!1;if(0!==n&&0!==i){const e=`${t.x+n},${t.y}`,s=`${t.x},${t.y+i}`;if(a.has(e)&&a.has(s))return!1}return!0}calculatePathBFS(t,e,a){const n=new Set;a.forEach(t=>{t.isActive&&(t.cells?t.cells.forEach(t=>n.add(`${t.x},${t.y}`)):n.add(`${t.x},${t.y}`))});const i={x:Math.floor(t.x),y:Math.floor(t.y)},s=Math.round(e.x),r=Math.round(e.y);if(n.has(`${i.x},${i.y}`))return[];const l=[i],c=new Set([`${i.x},${i.y}`]),o=new Map,h=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}];for(;l.length;){const t=l.shift();if(t.x===s&&t.y===r){const e=[];let a=t;for(;a;){e.unshift({x:a.x,y:a.y});const t=`${a.x},${a.y}`;a=o.get(t)}return e.slice(1)}for(const e of h){const a=t.x+e.x,i=t.y+e.y;if(a<0||i<0||a>=this.gridWidth||i>=this.gridHeight)continue;const s=`${a},${i}`;c.has(s)||n.has(s)||(c.add(s),o.set(s,t),l.push({x:a,y:i}))}}return[]}}class f{constructor(t,e){this.gridWidth=t,this.gridHeight=e,this.pathfinder=new m(t,e)}getDistance(t,e){return Math.abs(t.x-e.x)+Math.abs(t.y-e.y)}chooseTarget(t,e){if(t.currentTarget&&t.currentTarget.isActive)return t.currentTarget;const a=e.find(t=>"command-center"===t.type),n=e.filter(t=>"tower"===t.type&&t.isActive);if(n.length>0){let e=n[0];return n.forEach(a=>{this.getDistance(t,a)<this.getDistance(t,e)&&(e=a)}),e}return a}getPerimeterCells(t){const e=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:1},{x:1,y:-1},{x:-1,y:1},{x:-1,y:-1}],a=t.cells?t.cells:[{x:t.x,y:t.y}],n=[];return a.forEach(t=>{e.forEach(e=>{const a=t.x+e.x,i=t.y+e.y;a<0||i<0||a>=this.gridWidth||i>=this.gridHeight||n.push({x:a,y:i})})}),n}planPath(t,e){const a=this.chooseTarget(t,e);if(!a)return{target:null,path:[]};const n=this.getPerimeterCells(a);n.sort((e,a)=>this.getDistance(t,e)-this.getDistance(t,a));const i=new Set;e.forEach(t=>{t.isActive&&(t.cells?t.cells.forEach(t=>i.add(`${t.x},${t.y}`)):i.add(`${t.x},${t.y}`))});for(const t of n)i.delete(`${t.x},${t.y}`);for(const e of n){const n=this.pathfinder.findPath({x:Math.floor(t.x),y:Math.floor(t.y)},e,i);if(n.length>0)return{target:a,path:n}}const s=e.filter(t=>"wall"===t.type&&t.isActive);s.sort((e,a)=>this.getDistance(t,e)-this.getDistance(t,a));for(const e of s){const a=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}],n=e.cells?e.cells:[{x:e.x,y:e.y}];for(const s of n)for(const n of a){const a={x:s.x+n.x,y:s.y+n.y};if(a.x<0||a.y<0||a.x>=this.gridWidth||a.y>=this.gridHeight)continue;i.delete(`${a.x},${a.y}`);const r=this.pathfinder.findPath({x:Math.floor(t.x),y:Math.floor(t.y)},a,i);if(r.length>0)return{target:e,path:r}}}return{target:a,path:[]}}}class y{constructor(t,e){this.gridWidth=t,this.gridHeight=e,this.planner=new f(t,e)}distance(t,e){return Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)}minDistanceToBuilding(t,e){return e?e.cells?Math.min(...e.cells.map(e=>this.distance(t,e))):this.distance(t,e):1/0}getMinDistanceToBuilding(t,e){return this.minDistanceToBuilding(t,e)}isPathBlocked(t,e){return!(!t||0===t.length)&&t.some(t=>e.some(e=>!!e.isActive&&(e.cells?e.cells.some(e=>e.x===t.x&&e.y===t.y):e.x===t.x&&e.y===t.y)))}update(t,e){if(void 0===t.lastPos&&(t.lastPos={x:t.x,y:t.y},t.stuckFrames=0),!t.path||t.pathIndex>=t.path.length||this.isPathBlocked(t.path,e)||t.stuckFrames>20){const{target:a,path:n}=this.planner.planPath(t,e);t.path=n,t.pathIndex=0,t.currentTarget=a,n&&n.length>0&&(t.stuckFrames=0,t.lastPos={x:t.x,y:t.y})}if(!t.path||0===t.path.length)return t.currentTarget&&this.minDistanceToBuilding(t,t.currentTarget)<=1.5?{...t,state:"attacking"}:(t.stuckFrames+=1,t);const a=t.path[t.pathIndex],n=a.x-t.x,i=a.y-t.y,s=Math.sqrt(n*n+i*i);if(s<.1)return t.pathIndex+=1,t;const r=n/s*t.speed,l=i/s*t.speed;let c=t.x+r,o=t.y+l;const h=Math.round(c),d=Math.round(o);if(e.some(t=>!!t.isActive&&(t.cells?t.cells.some(t=>t.x===h&&t.y===d):t.x===h&&t.y===d)))return t.stuckFrames+=1,t;if(this.distance({x:c,y:o},t.lastPos)<.0025?t.stuckFrames+=1:(t.stuckFrames=0,t.lastPos={x:c,y:o}),t.currentTarget&&this.minDistanceToBuilding({x:c,y:o},t.currentTarget)<=1.5)return{...t,x:c,y:o,state:"attacking"};if(t.currentTarget&&"command-center"===t.currentTarget.type&&e.find(e=>"tower"===e.type&&e.isActive&&this.minDistanceToBuilding(t,e)<=10)){const a=this.planner.planPath(t,e);t.currentTarget=a.target,t.path=a.path,t.pathIndex=0}return{...t,x:c,y:o,state:"moving"}}debugRenderPaths(){}}class p{constructor(t,e){this.gridWidth=t,this.gridHeight=e,this.enemies=[],this.lastSpawnTime=0,this.movementHandler=new y(t,e),this.edgePositions=this.calculateEdgePositions()}calculateEdgePositions(){return[...Array.from({length:this.gridWidth},(t,e)=>({x:e,y:0})),...Array.from({length:this.gridWidth},(t,e)=>({x:e,y:this.gridHeight-1})),...Array.from({length:this.gridHeight-2},(t,e)=>({x:0,y:e+1})),...Array.from({length:this.gridHeight-2},(t,e)=>({x:this.gridWidth-1,y:e+1}))]}spawnEnemy(){const t=this.edgePositions[Math.floor(Math.random()*this.edgePositions.length)],e=((t,e)=>{const a=o[t];if(!a)throw new Error(`Unknown enemy type: ${t}`);return{id:Date.now()+Math.random(),type:t,x:e.x,y:e.y,health:a.health,maxHealth:a.health,damage:a.damage,speed:a.speed,isActive:!0,lastAttackTime:0,isAttacking:!1,attackAnimationProgress:0,state:"moving",currentTarget:null,path:null,pathIndex:0,lastPathCalc:null}})((()=>{const t=Object.keys(o),e=t.reduce((t,e)=>t+o[e].spawnWeight,0);let a=Math.random()*e;for(const e of t)if(a-=o[e].spawnWeight,a<=0)return e;return"basic"})(),t);return this.enemies.push(e),e}update(t,e,a){const n=Date.now();n-this.lastSpawnTime>2e3&&(this.spawnEnemy(),this.lastSpawnTime=n);const i=t.filter(t=>"tower"===t.type&&t.isActive),s=t.find(t=>"command-center"===t.type);new Set(this.enemies.map(t=>`${Math.floor(t.x)},${Math.floor(t.y)}`)),this.enemies=this.enemies.map(n=>{if(!s)return n;let r=s;("attacking"!==n.state||!n.currentTarget||"command-center"!==n.currentTarget.type)&&i.length>0&&(r=i.reduce((t,e)=>{const a=this.movementHandler.getMinDistanceToBuilding(n,t);return this.movementHandler.getMinDistanceToBuilding(n,e)<a?e:t},i[0]));let l=this.movementHandler.update(n,t);return l=d.handleAttack(l,e,a),l}).filter(t=>t.isActive)}render(t,e,a,n){g.renderAllEnemies(this.enemies,t,e,a,n,this.gridWidth,this.gridHeight)}getEnemyCount(){return this.enemies.length}getEnemies(){return this.enemies}removeEnemy(t){this.enemies=this.enemies.filter(e=>e.id!==t)}damageEnemy(t,e,a){this.enemies=this.enemies.map(n=>n.id===t?d.damageEnemy(n,e,t=>{const e=(t=>{const e=o[t];return e?e.points:1})(t.type);a({...t,reward:e})}):n).filter(t=>t.isActive)}isCellOccupied(t,e){return this.enemies.some(a=>Math.floor(a.x)===t&&Math.floor(a.y)===e)}debugRenderPaths(t,e,a,n){this.movementHandler.debugRenderPaths(t,this.enemies,n,e,a)}}class x{constructor(){this.projectiles=[]}createProjectile(t,e,a){const n={id:Date.now()+Math.random(),x:t.x,y:t.y,targetId:e.id,targetX:e.x,targetY:e.y,damage:a,speed:.1,isActive:!0};this.projectiles.push(n)}update(t,e){this.projectiles=this.projectiles.filter(t=>t.isActive),this.projectiles.forEach(a=>{const n=t.find(t=>t.id===a.targetId),i=n?n.x:a.targetX,s=n?n.y:a.targetY,r=i-a.x,l=s-a.y,c=Math.sqrt(r*r+l*l);if(c<.5)return n&&e(a.targetId,a.damage),void(a.isActive=!1);const o=r/c*a.speed,h=l/c*a.speed;a.x+=o,a.y+=h,n&&(a.targetX=n.x,a.targetY=n.y)})}render(t,e,a,n){this.projectiles.forEach(i=>{const s=e+i.x*n+n/2,r=a+i.y*n+n/2;t.fillStyle="#f1c40f",t.beginPath(),t.arc(s,r,3,0,2*Math.PI),t.fill()})}}const b={id:"command-center",name:"Command Center",description:"Your main base. Protect it at all costs!",baseStats:{health:1e3,maxHealth:1e3,attackDamage:20,attackRange:8,attackCooldown:1e3,projectileCount:1,lastAttackTime:0},upgrades:{damage:{name:"Damage",description:"+5 DMG",cost:29,effect:t=>({...t,attackDamage:t.attackDamage+5})},range:{name:"Range",description:"+1 Range",cost:29,effect:t=>({...t,attackRange:t.attackRange+1})},fireRate:{name:"Fire Rate",description:"-50ms Cooldown",cost:48,effect:t=>({...t,attackCooldown:Math.max(100,t.attackCooldown-50)})},projectiles:{name:"Multi-Shot",description:"+1 Projectile",cost:125,effect:t=>({...t,projectileCount:t.projectileCount+1})},repair:{name:"Repair",description:"+250 HP",cost:20,effect:t=>({...t,health:Math.min(t.maxHealth,t.health+250)})},maxHealth:{name:"Fortify",description:"+250 Max HP",cost:50,effect:t=>({...t,maxHealth:t.maxHealth+250,health:t.health+250})}},shape:[{x:0,y:0},{x:0,y:-1},{x:0,y:1},{x:-1,y:0},{x:1,y:0}],canBuild:!1,buildCost:0};class k{constructor(t=100){this.nuggets=t,this.score=0}addReward(t){return this.nuggets+=t,this.score+=t,{nuggets:this.nuggets,score:this.score}}spendNuggets(t){return this.nuggets>=t&&(this.nuggets-=t,!0)}canAfford(t){return this.nuggets>=t}getState(){return{nuggets:this.nuggets,score:this.score}}reset(){this.nuggets=100,this.score=0}}const w=43,v=32,C="countdown",E="playing",A="gameOver";class M{constructor(){this.reset()}reset(){var t,e;this.status=C,this.countdown=10,this.mainBuilding=(t=Math.floor(21.5),e=Math.floor(16),{...b.baseStats,id:"main-command-center",type:"command-center",x:t,y:e,cells:b.shape.map(a=>({x:t+a.x,y:e+a.y})),isActive:!0,lastTurretAngle:0}),this.buildings=[],this.resources=new k(100),this.countdownStartTime=null}getState(){const t=this.resources.getState();return{status:this.status,countdown:this.countdown,mainBuilding:this.mainBuilding,buildings:this.buildings,nuggets:t.nuggets,score:t.score}}updateCountdown(){if(this.status!==C)return!1;this.countdownStartTime||(this.countdownStartTime=Date.now());const t=Math.floor((Date.now()-this.countdownStartTime)/1e3),e=Math.max(0,10-t);return e!==this.countdown&&(this.countdown=e,0===e&&(this.status=E,this.countdownStartTime=null),!0)}damageBuilding(t,e){if("main-command-center"===t){const t=Math.max(0,this.mainBuilding.health-e);return this.mainBuilding.health=t,0===t?(this.status=A,{gameOver:!0,building:this.mainBuilding}):{gameOver:!1,building:this.mainBuilding}}const a=this.buildings.findIndex(e=>e.id===t);if(-1===a)return{gameOver:!1,building:null};const n=this.buildings[a],i=Math.max(0,n.health-e);return n.health=i,n.isActive=i>0,n.isActive||this.buildings.splice(a,1),{gameOver:!1,building:n}}addEnemyKillReward(t){return this.resources.addReward(t)}spendNuggets(t){return this.resources.spendNuggets(t)}canAfford(t){return this.resources.canAfford(t)}addBuilding(t){this.buildings.push(t)}removeBuilding(t){const e=this.buildings.findIndex(e=>e.id===t);if(-1!==e){const t=this.buildings[e];return this.buildings.splice(e,1),t}return null}updateBuilding(t,e){if("main-command-center"===t)return this.mainBuilding=e,this.mainBuilding;const a=this.buildings.findIndex(e=>e.id===t);return-1!==a?(this.buildings[a]=e,this.buildings[a]):null}getAllBuildings(){return[...this.buildings,this.mainBuilding]}isPositionOccupied(t,e){return!!this.mainBuilding.cells.some(a=>a.x===t&&a.y===e)||this.buildings.some(a=>a.x===t&&a.y===e)}canBuildAt(t,e,a=null){return!(t<0||t>=w||e<0||e>=v||this.isPositionOccupied(t,e)||a&&a.isCellOccupied(t,e))}}const S={id:"wall",name:"Wall",description:"Defensive structure that blocks enemy movement.",baseStats:{health:300,maxHealth:300,attackDamage:0,attackRange:0,attackCooldown:0,projectileCount:0,lastAttackTime:0,spikeDamage:0},upgrades:{repair:{name:"Repair",description:"+150 HP",cost:3,effect:t=>({...t,health:Math.min(t.maxHealth,t.health+150)})},reinforce:{name:"Reinforce",description:"+100 Max HP",cost:5,effect:t=>({...t,maxHealth:t.maxHealth+100,health:t.health+100})}},canBuild:!0,buildCost:5,color:"#78909c",borderColor:"#546e7a"},B={id:"tower",name:"Guard Tower",description:"Attacks enemies within its range. High priority target for enemies.",baseStats:{health:150,maxHealth:150,attackDamage:10,attackRange:6,attackCooldown:500,projectileCount:1,lastAttackTime:0},upgrades:{damage:{name:"Damage",description:"+4 DMG",cost:40,effect:t=>({...t,attackDamage:t.attackDamage+4})},range:{name:"Range",description:"+1 Range",cost:30,effect:t=>({...t,attackRange:t.attackRange+1})},fireRate:{name:"Fire Rate",description:"-150ms Cooldown",cost:45,effect:t=>({...t,attackCooldown:Math.max(200,t.attackCooldown-150)})},projectiles:{name:"Multi-Shot",description:"+1 Projectile",cost:100,effect:t=>({...t,projectileCount:t.projectileCount+1})},repair:{name:"Repair",description:"+75 HP",cost:15,effect:t=>({...t,health:Math.min(t.maxHealth,t.health+75)})}},canBuild:!0,buildCost:35,color:"#27ae60",borderColor:"#229954"},T={id:"upgrade-center",name:"Upgrade Center",description:"Unlocks powerful global upgrades for all your structures.",baseStats:{health:400,maxHealth:400},upgrades:{spikes:{name:"Global Spikes",description:"All walls deal 10 damage to attackers.",cost:150,isGlobal:!0,effect:t=>({...t,spikeDamage:(t.spikeDamage||0)+10})},repair:{name:"Repair",description:"+100 HP",cost:15,effect:t=>({...t,health:Math.min(t.maxHealth,t.health+100)})}},canBuild:!0,buildCost:60,color:"#f1c40f",borderColor:"#f39c12"},P=[{type:"wall",config:S},{type:"tower",config:B},{type:"upgrade-center",config:T}],H={"command-center":b,wall:S,tower:B,"upgrade-center":T},R=t=>H[t]||null,$=(t,e,a)=>{const n=R(t.type),i=n?.upgrades?.[e];return i?i.isGlobal?i.effect(a):i.effect(t):t};class D{constructor(t){this.canvas=t,this.context=t.getContext("2d")}calculateLayout(){const t=this.canvas.parentElement;this.canvas.width===t.clientWidth&&this.canvas.height===t.clientHeight||(this.canvas.width=t.clientWidth,this.canvas.height=t.clientHeight);const e=Math.floor(this.canvas.width/w),a=Math.floor(this.canvas.height/v),n=Math.min(e,a),i=w*n,s=v*n;return{actualCellSize:n,gridPixelWidth:i,gridPixelHeight:s,offsetX:(this.canvas.width-i)/2,offsetY:(this.canvas.height-s)/2}}clear(){this.context.fillStyle="#1a1a1a",this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}renderGrid(t){const{actualCellSize:e,gridPixelWidth:a,gridPixelHeight:n,offsetX:i,offsetY:s}=t;this.context.strokeStyle="#333",this.context.lineWidth=1;for(let t=0;t<=w;t++)this.context.beginPath(),this.context.moveTo(i+t*e,s),this.context.lineTo(i+t*e,s+n),this.context.stroke();for(let t=0;t<=v;t++)this.context.beginPath(),this.context.moveTo(i,s+t*e),this.context.lineTo(i+a,s+t*e),this.context.stroke()}renderBuilding(t,e,a=!1){const{actualCellSize:n,offsetX:i,offsetY:s}=e,r=R(t.type),l=r?.color||"#4a90e2",c=r?.borderColor||"#2c5aa0",o=(t,e)=>{const a=i+t*n,r=s+e*n;this.context.fillStyle=l,this.context.fillRect(a,r,n,n),this.context.strokeStyle=c,this.context.lineWidth=1,this.context.strokeRect(a,r,n,n)};"command-center"===t.type?t.cells.forEach(t=>o(t.x,t.y)):o(t.x,t.y),"tower"!==t.type&&"command-center"!==t.type||this.renderTurret(t,e),a&&this.renderSelectionHighlight(t,e),this.renderHealthBar(t,e)}renderTurret(t,e){const{actualCellSize:a,offsetX:n,offsetY:i}=e,s=n+t.x*a+a/2,r=i+t.y*a+a/2,l=.4*a,c=t.lastTurretAngle||0,o=s+Math.cos(c)*l,h=r+Math.sin(c)*l;this.context.strokeStyle="#bdc3c7",this.context.lineWidth=3,this.context.beginPath(),this.context.moveTo(s,r),this.context.lineTo(o,h),this.context.stroke()}renderSelectionHighlight(t,e){const{actualCellSize:a,offsetX:n,offsetY:i}=e;this.context.strokeStyle="#32cd32",this.context.lineWidth=3,(t.cells||[{x:t.x,y:t.y}]).forEach(t=>{this.context.strokeRect(n+t.x*a,i+t.y*a,a,a)})}renderHealthBar(t,e){const{actualCellSize:a,offsetX:n,offsetY:i}=e;let s=a-4,r=n+t.x*a+2,l=i+t.y*a+a;"command-center"===t.type&&(s=3*a-4,r=n+(t.x-1)*a+2,l=i+(t.y+1)*a+a),u(this.context,r,l,s,t.health,t.maxHealth,5)}renderBuildings(t,e,a=null){t.forEach(t=>{const n=a&&a.id===t.id;this.renderBuilding(t,e,n)})}renderBuildSelection(t,e,a=!0){const{actualCellSize:n,offsetX:i,offsetY:s}=e,r=i+t.x*n,l=s+t.y*n;this.context.strokeStyle=a?"#32cd32":"#e74c3c",this.context.lineWidth=3,this.context.strokeRect(r,l,n,n)}renderGameOverOverlay(){this.context.fillStyle="rgba(0, 0, 0, 0.7)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.font="40px Arial",this.context.fillStyle="white",this.context.textAlign="center",this.context.fillText("GAME OVER",this.canvas.width/2,this.canvas.height/2)}renderCountdownOverlay(t){this.context.font="60px Arial",this.context.fillStyle="rgba(255, 255, 255, 0.8)",this.context.textAlign="center",this.context.fillText(t,this.canvas.width/2,80),this.context.font="20px Arial",this.context.fillText("Prepare your defenses!",this.canvas.width/2,120)}renderResourceUI(t,e){((t,e,a,n)=>{t.fillStyle="white",t.font="bold 18px Arial",t.textAlign="left",t.fillText(`Score: ${a}`,10,25),t.fillText(`Nuggets: ${n} 💎`,10,50)})(this.context,this.canvas.width,t,e)}render(t,e,a,n,i){const s=this.calculateLayout();this.clear(),this.renderGrid(s);const r=[t.mainBuilding,...t.buildings];return this.renderBuildings(r,s,e),e&&"build"===e.type&&this.renderBuildSelection(e,s,a),n&&n.render(this.context,s.offsetX,s.offsetY,s.actualCellSize),i&&i.render(this.context,s.offsetX,s.offsetY,s.actualCellSize),this.renderResourceUI(t.score,t.nuggets),"gameOver"===t.status&&this.renderGameOverOverlay(),"countdown"===t.status&&t.countdown>0&&this.renderCountdownOverlay(t.countdown),s}}const N=({building:t,nuggets:e,onUpgrade:a,onSell:i,onClose:s,onBuild:r,mode:l="upgrade",isBuildLocationValid:c=!0})=>{if(!t&&"build"!==l)return null;if("build"===l){const t=t=>e>=t,a=!c;return(0,n.createElement)("div",{className:"building-panel visible"},(0,n.createElement)("div",{className:"panel-header"},(0,n.createElement)("h3",null,"Build Menu"),(0,n.createElement)("button",{onClick:s,className:"close-button"},"×")),(0,n.createElement)("div",{className:"panel-main"},(0,n.createElement)("div",{className:"panel-content"},(0,n.createElement)("p",null,"Nuggets: ",(0,n.createElement)("span",{className:"stat-value"},e,"💎")),a?(0,n.createElement)("p",{className:"location-invalid-message"},"Cannot build here: Location is blocked by an enemy."):(0,n.createElement)("p",null,"Select a building to construct:")),(0,n.createElement)("div",{className:"panel-builds"},P.map(({type:e,config:i})=>(0,n.createElement)("button",{key:e,onClick:()=>r(e),disabled:!t(i.buildCost)||a,className:"build-button",title:a?"Location is blocked":""},(0,n.createElement)("div",{className:"build-title"},i.name),(0,n.createElement)("div",{className:"build-description"},i.description),(0,n.createElement)("div",{className:"build-cost"},i.buildCost,"💎"))))))}const o=R(t.type);if(!o)return null;const h=t=>{const a=o.upgrades[t];return a&&e>=a.cost},d=t=>h(t)?"upgrade-button":"upgrade-button disabled",u=(t,e,a="")=>(0,n.createElement)("p",{key:t},t,": ",(0,n.createElement)("span",{className:"stat-value"},e,a)),g="command-center"!==t.type,m=t&&t.buildCost?Math.floor(t.health/t.maxHealth*t.buildCost):0;return(0,n.createElement)("div",{className:"building-panel visible"},(0,n.createElement)("div",{className:"panel-header"},(0,n.createElement)("h3",null,o.name),(0,n.createElement)("button",{onClick:s,className:"close-button"},"×")),(0,n.createElement)("div",{className:"panel-main"},(0,n.createElement)("div",{className:"panel-content"},(()=>{const e=[];return e.push(u("Health",`${Math.round(t.health)} / ${t.maxHealth}`)),t.attackDamage>0&&(e.push(u("Damage",t.attackDamage)),e.push(u("Range",t.attackRange)),e.push(u("Fire Rate",(1e3/t.attackCooldown).toFixed(2),"/s")),t.projectileCount>1&&e.push(u("Projectiles",t.projectileCount))),t.spikeDamage>0&&e.push(u("Spike Damage",t.spikeDamage)),e})()),(0,n.createElement)("div",{className:"panel-upgrades"},Object.entries(o.upgrades).map(([t,e])=>(0,n.createElement)("button",{key:t,onClick:()=>a(t),disabled:!h(t),className:d(t)},(0,n.createElement)("div",{className:"upgrade-title"},e.name),(0,n.createElement)("div",{className:"upgrade-effect"},e.description),(0,n.createElement)("div",{className:"upgrade-cost"},e.cost,"💎")))),g&&(0,n.createElement)("div",{className:"panel-sell"},(0,n.createElement)("button",{onClick:()=>i(t.id),className:"sell-button"},"Sell Building",(0,n.createElement)("span",{className:"sell-amount"},"+",m,"💎")))))};console.log("Hello World! (from chubes-games-base-builder block)");const O=i().forwardRef(({selectedBuilding:t,setSelectedBuilding:e,setNuggets:a,setGameStatus:s,onBuildLocationValidityChange:r,globalUpgrades:c},o)=>{const h=(0,l.useRef)(null),d=(0,l.useRef)(null),u=(0,l.useRef)(null),g=(0,l.useRef)(null),m=(0,l.useRef)(null),f=(0,l.useRef)(null),[y,b]=(0,l.useState)(null),[k,C]=(0,l.useState)(!0);(0,l.useEffect)(()=>{d.current=new M,u.current=new D(h.current),g.current=new p(w,v),m.current=new x,b(d.current.getState())},[]),(0,l.useEffect)(()=>{r&&r(k)},[k,r]),(0,l.useEffect)(()=>{y&&(s(y.status),a(y.nuggets))},[y,s,a]),(0,l.useEffect)(()=>{const t=h.current,a=a=>{if(!y||y.status===A)return;const n=t.getBoundingClientRect(),i=u.current.calculateLayout(),s=a.clientX-n.left,r=a.clientY-n.top,l=Math.floor((s-i.offsetX)/i.actualCellSize),c=Math.floor((r-i.offsetY)/i.actualCellSize);if(l<0||l>=w||c<0||c>=v)return;if(y.mainBuilding.cells.some(t=>t.x===l&&t.y===c))return void e(y.mainBuilding);const o=y.buildings.find(t=>t.x===l&&t.y===c);e(o||{type:"build",x:l,y:c})};return t.addEventListener("click",a),()=>t.removeEventListener("click",a)},[y,e]);const P=(0,l.useCallback)(()=>{b(d.current.getState())},[]),H=(0,l.useCallback)((t,a)=>{d.current.damageBuilding(t,a).gameOver&&e(null),P()},[P,e]),N=(0,l.useCallback)(t=>{d.current.addEnemyKillReward(t.reward||1),P()},[P]),O=(0,l.useCallback)((t,e)=>{g.current&&g.current.damageEnemy(t,e,N)},[N]);return i().useImperativeHandle(o,()=>({handleUpgrade:a=>{if(!t)return;const n=R(t.type);if(!((t,e,a)=>{const n=R(t),i=n?.upgrades?.[e]?.cost;return void 0!==i&&a>=i})(t.type,a,y.nuggets))return;const i=n.upgrades[a].cost,s=$(t,a);d.current.spendNuggets(i)&&(d.current.updateBuilding(t.id,s),e(s),P())},handleSell:t=>{const a=d.current.removeBuilding(t);if(a){const t=(t=>Math.floor(t.health/t.maxHealth*t.buildCost))(a);d.current.resources.nuggets+=t,P()}e(null)},handleBuild:(t,e,a)=>{const n=R(t);if(n&&d.current.canAfford(n.buildCost))if(d.current.canBuildAt(e,a,g.current)){if(d.current.spendNuggets(n.buildCost)){const n=((t,e,a)=>{switch(t){case"wall":return((t,e)=>({...S.baseStats,id:`wall-${Date.now()}-${Math.random()}`,type:"wall",x:t,y:e,isActive:!0,buildCost:S.buildCost}))(e,a);case"tower":return((t,e)=>({...B.baseStats,lastTurretAngle:0,id:`tower-${Date.now()}-${Math.random()}`,type:"tower",x:t,y:e,isActive:!0,buildCost:B.buildCost}))(e,a);case"upgrade-center":return((t,e)=>({...T.baseStats,id:`upgrade-center-${Date.now()}-${Math.random()}`,type:"upgrade-center",x:t,y:e,isActive:!0,buildCost:T.buildCost}))(e,a);default:return null}})(t,e,a);d.current.addBuilding(n),P()}}else console.error("Build failed: Invalid location.")},resetGame:()=>{d.current.reset(),g.current=new p(w,v),m.current=new x,e(null),P()}})),(0,l.useEffect)(()=>{y&&e(t=>t&&"build"!==t.type?"main-command-center"===t.id?y.mainBuilding:y.buildings.find(e=>e.id===t.id)||null:t)},[y,e]),(0,l.useEffect)(()=>{if(!y)return;const e=()=>{if(d.current.updateCountdown()&&P(),t&&"build"===t.type){const e=d.current.canBuildAt(t.x,t.y,g.current);e!==k&&C(e)}if(u.current.render(y,t,k,g.current,m.current),y.status===E){const t=Date.now(),e=d.current.getAllBuildings();e.forEach(e=>{if(e.attackDamage>0&&t-e.lastAttackTime>e.attackCooldown){const a=g.current.getEnemies().filter(t=>{const a=t.x-e.x,n=t.y-e.y;return Math.sqrt(a*a+n*n)<=e.attackRange});if(a.length>0){const n=a.reduce((t,a)=>{const n=Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2);return Math.sqrt((a.x-e.x)**2+(a.y-e.y)**2)<n?a:t});e.lastTurretAngle=Math.atan2(n.y-e.y,n.x-e.x);const i=e.projectileCount||1;a.sort((t,a)=>Math.sqrt((t.x-e.x)**2+(t.y-e.y)**2)-Math.sqrt((a.x-e.x)**2+(a.y-e.y)**2)).slice(0,i).forEach(t=>{m.current.createProjectile(e,t,e.attackDamage)}),e.lastAttackTime=t}}}),g.current&&g.current.update(e,H,c),m.current&&m.current.update(g.current.getEnemies(),O)}f.current=window.requestAnimationFrame(e)};return e(),()=>{f.current&&window.cancelAnimationFrame(f.current)}},[y,t,k,P,H,O,c]),(0,n.createElement)("canvas",{ref:h})}),W=()=>{const[t,e]=(0,l.useState)(null),[a,i]=(0,l.useState)(100),[s,r]=(0,l.useState)(C),[o,h]=(0,l.useState)(!0),[d,u]=(0,l.useState)({spikeDamage:0}),g=(0,l.useRef)(null),m="build"===t?.type?"build":"upgrade",f="build"===t?.type?null:t;return(0,n.createElement)(c,null,(0,n.createElement)(O,{ref:g,selectedBuilding:t,setSelectedBuilding:e,setNuggets:i,setGameStatus:r,onBuildLocationValidityChange:h,globalUpgrades:d}),s===A&&(0,n.createElement)("div",{className:"game-over-overlay"},(0,n.createElement)("button",{onClick:()=>{e(null),i(100),g.current&&g.current.resetGame()},className:"play-again-button"},"Play Again")),(0,n.createElement)(N,{building:f,nuggets:a,onUpgrade:e=>{const n=R(t.type),s=n?.upgrades?.[e];if(s&&!(a<s.cost)){if(i(a-s.cost),s.isGlobal){const a=$(t,e,d);return void u(a)}g.current&&g.current.handleUpgrade(e)}},onSell:t=>{g.current&&g.current.handleSell(t)},onClose:()=>e(null),onBuild:a=>{g.current&&t&&"build"===t.type&&(g.current.handleBuild(a,t.x,t.y),e(null))},mode:m,isBuildLocationValid:o}))};document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".wp-block-chubes-games-base-builder").forEach(t=>{r().render((0,n.createElement)(W,null),t)})})}},a={};function n(t){var i=a[t];if(void 0!==i)return i.exports;var s=a[t]={exports:{}};return e[t](s,s.exports,n),s.exports}n.m=e,t=[],n.O=(e,a,i,s)=>{if(!a){var r=1/0;for(h=0;h<t.length;h++){for(var[a,i,s]=t[h],l=!0,c=0;c<a.length;c++)(!1&s||r>=s)&&Object.keys(n.O).every(t=>n.O[t](a[c]))?a.splice(c--,1):(l=!1,s<r&&(r=s));if(l){t.splice(h--,1);var o=i();void 0!==o&&(e=o)}}return e}s=s||0;for(var h=t.length;h>0&&t[h-1][2]>s;h--)t[h]=t[h-1];t[h]=[a,i,s]},n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var a in e)n.o(e,a)&&!n.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t={434:0,707:0};n.O.j=e=>0===t[e];var e=(e,a)=>{var i,s,[r,l,c]=a,o=0;if(r.some(e=>0!==t[e])){for(i in l)n.o(l,i)&&(n.m[i]=l[i]);if(c)var h=c(n)}for(e&&e(a);o<r.length;o++)s=r[o],n.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return n.O(h)},a=globalThis.webpackChunkchubes_games=globalThis.webpackChunkchubes_games||[];a.forEach(e.bind(null,0)),a.push=e.bind(null,a.push.bind(a))})();var i=n.O(void 0,[707],()=>n(660));i=n.O(i)})();