(()=>{"use strict";var e,t={346:(e,t,a)=>{const n=window.React;var i=a.n(n);const s=window.ReactDOM;var r=a.n(s);const l=window.wp.element,c=(0,l.forwardRef)((e,t)=>{const{className:a,...i}=e,s=a?`chubes-game-window ${a}`:"chubes-game-window";return(0,n.createElement)("div",{...i,className:s,ref:t},e.children)}),o={basic:{id:"basic",name:"Basic Enemy",health:100,damage:10,speed:.02,color:"#e74c3c",borderColor:"#c0392b",attackColor:"#ff6b6b",attackBorderColor:"#e55353",attackCooldown:1500,size:.6,points:1,spawnWeight:10},fast:{id:"fast",name:"Fast Enemy",health:60,damage:8,speed:.035,color:"#f39c12",borderColor:"#d68910",attackColor:"#ffcc29",attackBorderColor:"#f4b942",attackCooldown:1200,size:.5,points:2,spawnWeight:3},heavy:{id:"heavy",name:"Heavy Enemy",health:200,damage:20,speed:.01,color:"#8e44ad",borderColor:"#6c3483",attackColor:"#bb6bd9",attackBorderColor:"#a569bd",attackCooldown:2e3,size:.8,points:3,spawnWeight:2}},d=e=>o[e];class h{static handleAttack(e,t,a={}){const n=Date.now(),i=d(e.type).attackCooldown;if("attacking"===e.state&&n-e.lastAttackTime>i)return{...e,isAttacking:!0,attackAnimationProgress:0,lastAttackTime:n};if(e.isAttacking){const n=.15,i=Math.min(1,e.attackAnimationProgress+n);if(i>=1){const n=e.currentTarget;return n&&(t(n.id,e.damage),"wall"===n.type&&a.spikeDamage>0)?{...e,health:Math.max(0,e.health-a.spikeDamage),isActive:e.health-a.spikeDamage>0,isAttacking:!1,attackAnimationProgress:0}:{...e,isAttacking:!1,attackAnimationProgress:0}}return{...e,attackAnimationProgress:i}}return e}static damageEnemy(e,t,a){const n=Math.max(0,e.health-t);return n<=0&&e.health>0&&a(e),{...e,health:n,isActive:n>0}}static getAttackAnimationOffset(e,t,a){if(!e.isAttacking||e.attackAnimationProgress<=0)return{x:0,y:0};const n=e.attackAnimationProgress;let i=0;i=n<=.5?2*n*3:2*(1-n)*3;let s=0,r=0;if(e.currentTarget)s=e.currentTarget.x>e.x?1:-1,r=e.currentTarget.y>e.y?1:-1;else{const n=a/2;s=t/2>e.x?1:-1,r=n>e.y?1:-1}return{x:s*i,y:r*i}}}function u(e,t,a,n,i,s,r=4){const l=Math.max(0,Math.min(i/s,1));e.fillStyle="#333",e.fillRect(t,a,n,r);let c="#2ecc71";l<.3?c="#e74c3c":l<.6&&(c="#f39c12"),e.fillStyle=c,e.fillRect(t,a,n*l,r)}class g{static renderEnemy(e,t,a,n,i,s,r){if(!e.isActive)return;const l=d(e.type);let c=a+e.x*i,o=n+e.y*i;const u=h.getAttackAnimationOffset(e,s,r);c+=u.x,o+=u.y;const g=i*l.size,m=(i-g)/2,f=e.isAttacking?l.attackColor:l.color,p=e.isAttacking?l.attackBorderColor:l.borderColor;t.fillStyle=f,t.fillRect(c+m,o+m,g,g),t.strokeStyle=p,t.lineWidth=1,t.strokeRect(c+m,o+m,g,g),this.renderHealthBar(e,t,c,o,i),"basic"!==e.type&&this.renderTypeIndicator(e,l,t,c,o,i)}static renderHealthBar(e,t,a,n,i){e.health>=e.maxHealth||u(t,a+4,n+i-2,i-8,e.health,e.maxHealth,3)}static renderTypeIndicator(e,t,a,n,i,s){const r=n+s-6-2,l=i+2;switch(a.fillStyle="white",a.strokeStyle="#333",a.lineWidth=1,e.type){case"fast":a.beginPath(),a.moveTo(r+3,l),a.lineTo(r,l+6),a.lineTo(r+6,l+6),a.closePath(),a.fill(),a.stroke();break;case"heavy":a.fillRect(r,l,6,6),a.strokeRect(r,l,6,6);break;default:a.beginPath(),a.arc(r+3,l+3,3,0,2*Math.PI),a.fill(),a.stroke()}}static renderAllEnemies(e,t,a,n,i,s,r){e.forEach(e=>{this.renderEnemy(e,t,a,n,i,s,r)})}static renderEnemyPath(e,t,a,n,i){e.path&&0!==e.path.length&&(t.strokeStyle="rgba(255, 255, 0, 0.3)",t.lineWidth=2,t.beginPath(),t.moveTo(a+e.x*i+i/2,n+e.y*i+i/2),e.path.forEach(e=>{t.lineTo(a+e.x*i+i/2,n+e.y*i+i/2)}),t.stroke())}}class m{constructor(e,t){this.gridWidth=e,this.gridHeight=t}findPath(e,t,a){const n=[{...e,g:0,h:this.manhattan(e,t),f:0,parent:null}];n[0].f=n[0].h;const i=new Set,s=new Map;for(;n.length;){let e=0;for(let t=1;t<n.length;t++)n[t].f<n[e].f&&(e=t);const r=n.splice(e,1)[0],l=`${r.x},${r.y}`;if(i.add(l),r.x===t.x&&r.y===t.y){let e=r;const t=[];for(;e;){t.unshift({x:e.x,y:e.y});const a=`${e.x},${e.y}`;e=s.get(a)}return t.slice(1)}for(const e of this.getNeighbors(r,a)){const a=`${e.x},${e.y}`;if(i.has(a))continue;const l=r.g+1,c=n.find(t=>t.x===e.x&&t.y===e.y);if(c)l<c.g&&(c.g=l,c.f=l+c.h,c.parent=r,s.set(a,r));else{const i=this.manhattan(e,t);n.push({...e,g:l,h:i,f:l+i,parent:r}),s.set(a,r)}}}return[]}calculatePath(e,t,a){const n=new Set;a.forEach(e=>{e.isActive&&(e.cells?e.cells.forEach(e=>n.add(`${e.x},${e.y}`)):n.add(`${e.x},${e.y}`))});const i={x:Math.floor(e.x),y:Math.floor(e.y)},s={x:Math.round(t.x),y:Math.round(t.y)};if(n.has(`${i.x},${i.y}`))return[];const r=this.findPath(i,s,n);if(r.length>1){r[0];const e=r[1];this.isStepClear(i,e,n)&&r.shift()}return r}manhattan(e,t){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)}getNeighbors(e,t){const a=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:1},{x:1,y:-1},{x:-1,y:1},{x:-1,y:-1}],n=[];for(const i of a){const a=e.x+i.x,s=e.y+i.y;if(!(a<0||s<0||a>=this.gridWidth||s>=this.gridHeight||t.has(`${a},${s}`))){if(0!==i.x&&0!==i.y){const a=`${e.x+i.x},${e.y}`,n=`${e.x},${e.y+i.y}`;if(t.has(a)||t.has(n))continue}n.push({x:a,y:s})}}return n}isStepClear(e,t,a){if(a.has(`${t.x},${t.y}`))return!1;const n=t.x-e.x,i=t.y-e.y;if(Math.abs(n)>1||Math.abs(i)>1)return!1;if(0!==n&&0!==i){const t=`${e.x+n},${e.y}`,s=`${e.x},${e.y+i}`;if(a.has(t)||a.has(s))return!1}return!0}calculatePathBFS(e,t,a){const n=new Set;a.forEach(e=>{e.isActive&&(e.cells?e.cells.forEach(e=>n.add(`${e.x},${e.y}`)):n.add(`${e.x},${e.y}`))});const i={x:Math.floor(e.x),y:Math.floor(e.y)},s=Math.round(t.x),r=Math.round(t.y);if(n.has(`${i.x},${i.y}`))return[];const l=[i],c=new Set([`${i.x},${i.y}`]),o=new Map,d=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}];for(;l.length;){const e=l.shift();if(e.x===s&&e.y===r){const t=[];let a=e;for(;a;){t.unshift({x:a.x,y:a.y});const e=`${a.x},${a.y}`;a=o.get(e)}return t.slice(1)}for(const t of d){const a=e.x+t.x,i=e.y+t.y;if(a<0||i<0||a>=this.gridWidth||i>=this.gridHeight)continue;const s=`${a},${i}`;c.has(s)||n.has(s)||(c.add(s),o.set(s,e),l.push({x:a,y:i}))}}return[]}}class f{constructor(e,t){this.gridWidth=e,this.gridHeight=t,this.pathfinder=new m(e,t)}getDistance(e,t){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)}chooseTarget(e,t){if(e.currentTarget&&e.currentTarget.isActive)return e.currentTarget;const a=t.find(e=>"command-center"===e.type),n=t.filter(e=>"tower"===e.type&&e.isActive);if(n.length>0){let t=n[0];return n.forEach(a=>{this.getDistance(e,a)<this.getDistance(e,t)&&(t=a)}),t}return a}getPerimeterCells(e){const t=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1},{x:1,y:1},{x:1,y:-1},{x:-1,y:1},{x:-1,y:-1}],a=e.cells?e.cells:[{x:e.x,y:e.y}],n=[];return a.forEach(e=>{t.forEach(t=>{const a=e.x+t.x,i=e.y+t.y;a<0||i<0||a>=this.gridWidth||i>=this.gridHeight||n.push({x:a,y:i})})}),n}planPath(e,t){const a=this.chooseTarget(e,t);if(!a)return{target:null,path:[]};let n=this.getPerimeterCells(a);const i=new Set;t.forEach(e=>{e.isActive&&(e.cells?e.cells.forEach(e=>i.add(`${e.x},${e.y}`)):i.add(`${e.x},${e.y}`))}),n=n.filter(e=>!i.has(`${e.x},${e.y}`)),n.length,n.sort((t,a)=>this.getDistance(e,t)-this.getDistance(e,a));const s=new Set;t.forEach(e=>{e.isActive&&(e.cells?e.cells.forEach(e=>s.add(`${e.x},${e.y}`)):s.add(`${e.x},${e.y}`))});for(const e of n)s.delete(`${e.x},${e.y}`);for(const t of n){const n=this.pathfinder.findPath({x:Math.floor(e.x),y:Math.floor(e.y)},t,s);if(n.length>0)return{target:a,path:n}}const r=t.filter(e=>"wall"===e.type&&e.isActive);r.sort((t,a)=>this.getDistance(e,t)-this.getDistance(e,a));for(const t of r){const a=[{x:1,y:0},{x:-1,y:0},{x:0,y:1},{x:0,y:-1}],n=t.cells?t.cells:[{x:t.x,y:t.y}];for(const i of n)for(const n of a){const a={x:i.x+n.x,y:i.y+n.y};if(a.x<0||a.y<0||a.x>=this.gridWidth||a.y>=this.gridHeight)continue;s.delete(`${a.x},${a.y}`);const r=this.pathfinder.findPath({x:Math.floor(e.x),y:Math.floor(e.y)},a,s);if(r.length>0)return{target:t,path:r}}}return{target:a,path:[]}}}class p{constructor(e,t){this.gridWidth=e,this.gridHeight=t,this.planner=new f(e,t)}distance(e,t){return Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)}minDistanceToBuilding(e,t){return t?t.cells?Math.min(...t.cells.map(t=>this.distance(e,t))):this.distance(e,t):1/0}getMinDistanceToBuilding(e,t){return this.minDistanceToBuilding(e,t)}isPathBlocked(e,t){return!(!e||0===e.length)&&e.some(e=>t.some(t=>!!t.isActive&&(t.cells?t.cells.some(t=>t.x===e.x&&t.y===e.y):t.x===e.x&&t.y===e.y)))}update(e,t){if(void 0===e.lastPos&&(e.lastPos={x:e.x,y:e.y},e.stuckFrames=0),!e.path||e.pathIndex>=e.path.length||this.isPathBlocked(e.path,t)||e.stuckFrames>20){const{target:a,path:n}=this.planner.planPath(e,t);e.path=n,e.pathIndex=0,e.currentTarget=a,n&&n.length>0&&(e.stuckFrames=0,e.lastPos={x:e.x,y:e.y})}if(!e.path||0===e.path.length)return e.currentTarget&&this.minDistanceToBuilding(e,e.currentTarget)<=1.5?{...e,state:"attacking"}:(e.stuckFrames+=1,e);const a=e.path[e.pathIndex],n=a.x-e.x,i=a.y-e.y,s=Math.sqrt(n*n+i*i);if(s<.1)return e.pathIndex+=1,e;const r=n/s*e.speed,l=i/s*e.speed;let c=e.x+r,o=e.y+l;const d=Math.round(c),h=Math.round(o);if(t.some(e=>!!e.isActive&&(e.cells?e.cells.some(e=>e.x===d&&e.y===h):e.x===d&&e.y===h)))return e.stuckFrames+=1,e;if(this.distance({x:c,y:o},e.lastPos)<.0025?e.stuckFrames+=1:(e.stuckFrames=0,e.lastPos={x:c,y:o}),e.currentTarget&&this.minDistanceToBuilding({x:c,y:o},e.currentTarget)<=1.5)return{...e,x:c,y:o,state:"attacking"};if(e.currentTarget&&"command-center"===e.currentTarget.type&&t.find(t=>"tower"===t.type&&t.isActive&&this.minDistanceToBuilding(e,t)<=10)){const a=this.planner.planPath(e,t);e.currentTarget=a.target,e.path=a.path,e.pathIndex=0}return{...e,x:c,y:o,state:"moving"}}debugRenderPaths(){}}class y{constructor(e,t){this.gridWidth=e,this.gridHeight=t,this.enemies=[],this.lastSpawnTime=0,this.movementHandler=new p(e,t),this.edgePositions=this.calculateEdgePositions()}calculateEdgePositions(){return[...Array.from({length:this.gridWidth},(e,t)=>({x:t,y:0})),...Array.from({length:this.gridWidth},(e,t)=>({x:t,y:this.gridHeight-1})),...Array.from({length:this.gridHeight-2},(e,t)=>({x:0,y:t+1})),...Array.from({length:this.gridHeight-2},(e,t)=>({x:this.gridWidth-1,y:t+1}))]}spawnEnemy(){const e=this.edgePositions[Math.floor(Math.random()*this.edgePositions.length)],t=((e,t)=>{const a=o[e];if(!a)throw new Error(`Unknown enemy type: ${e}`);return{id:Date.now()+Math.random(),type:e,x:t.x,y:t.y,health:a.health,maxHealth:a.health,damage:a.damage,speed:a.speed,isActive:!0,lastAttackTime:0,isAttacking:!1,attackAnimationProgress:0,state:"moving",currentTarget:null,path:null,pathIndex:0,lastPathCalc:null}})((()=>{const e=Object.keys(o),t=e.reduce((e,t)=>e+o[t].spawnWeight,0);let a=Math.random()*t;for(const t of e)if(a-=o[t].spawnWeight,a<=0)return t;return"basic"})(),e);return this.enemies.push(t),t}update(e,t,a){const n=Date.now();n-this.lastSpawnTime>2e3&&(this.spawnEnemy(),this.lastSpawnTime=n);const i=e.filter(e=>"tower"===e.type&&e.isActive),s=e.find(e=>"command-center"===e.type);new Set(this.enemies.map(e=>`${Math.floor(e.x)},${Math.floor(e.y)}`)),this.enemies=this.enemies.map(n=>{if(!s)return n;let r=s;("attacking"!==n.state||!n.currentTarget||"command-center"!==n.currentTarget.type)&&i.length>0&&(r=i.reduce((e,t)=>{const a=this.movementHandler.getMinDistanceToBuilding(n,e);return this.movementHandler.getMinDistanceToBuilding(n,t)<a?t:e},i[0]));let l=this.movementHandler.update(n,e);return l=h.handleAttack(l,t,a),l}).filter(e=>e.isActive)}render(e,t,a,n){g.renderAllEnemies(this.enemies,e,t,a,n,this.gridWidth,this.gridHeight)}getEnemyCount(){return this.enemies.length}getEnemies(){return this.enemies}removeEnemy(e){this.enemies=this.enemies.filter(t=>t.id!==e)}damageEnemy(e,t,a){this.enemies=this.enemies.map(n=>n.id===e?h.damageEnemy(n,t,e=>{const t=(e=>{const t=o[e];return t?t.points:1})(e.type);a({...e,reward:t})}):n).filter(e=>e.isActive)}isCellOccupied(e,t){return this.enemies.some(a=>Math.floor(a.x)===e&&Math.floor(a.y)===t)}debugRenderPaths(e,t,a,n){this.movementHandler.debugRenderPaths(e,this.enemies,n,t,a)}}class x{constructor(){this.projectiles=[]}createProjectile(e,t,a){const n={id:Date.now()+Math.random(),x:e.x,y:e.y,targetId:t.id,targetX:t.x,targetY:t.y,damage:a,speed:.1,isActive:!0};this.projectiles.push(n)}update(e,t){this.projectiles=this.projectiles.filter(e=>e.isActive),this.projectiles.forEach(a=>{const n=e.find(e=>e.id===a.targetId),i=n?n.x:a.targetX,s=n?n.y:a.targetY,r=i-a.x,l=s-a.y,c=Math.sqrt(r*r+l*l);if(c<.5)return n&&t(a.targetId,a.damage),void(a.isActive=!1);const o=r/c*a.speed,d=l/c*a.speed;a.x+=o,a.y+=d,n&&(a.targetX=n.x,a.targetY=n.y)})}render(e,t,a,n){this.projectiles.forEach(i=>{const s=t+i.x*n+n/2,r=a+i.y*n+n/2;e.fillStyle="#f1c40f",e.beginPath(),e.arc(s,r,3,0,2*Math.PI),e.fill()})}}const b={id:"command-center",name:"Command Center",description:"Your main base. Protect it at all costs!",baseStats:{health:1e3,maxHealth:1e3,attackDamage:20,attackRange:8,attackCooldown:1e3,projectileCount:1,lastAttackTime:0},upgrades:{damage:{name:"Damage",description:"+5 DMG",cost:60,effect:e=>({...e,attackDamage:e.attackDamage+5})},range:{name:"Range",description:"+1 Range",cost:40,effect:e=>({...e,attackRange:e.attackRange+1})},fireRate:{name:"Fire Rate",description:"-50ms Cooldown",cost:70,effect:e=>({...e,attackCooldown:Math.max(100,e.attackCooldown-50)})},projectiles:{name:"Multi-Shot",description:"+1 Projectile",cost:125,effect:e=>({...e,projectileCount:e.projectileCount+1})},repair:{name:"Repair",description:"+250 HP",cost:20,effect:e=>({...e,health:Math.min(e.maxHealth,e.health+250)})},maxHealth:{name:"Fortify",description:"+250 Max HP",cost:50,effect:e=>({...e,maxHealth:e.maxHealth+250,health:e.health+250})}},shape:[{x:0,y:0},{x:0,y:-1},{x:0,y:1},{x:-1,y:0},{x:1,y:0}],canBuild:!1,buildCost:0};class k{constructor(e=100){this.nuggets=e,this.score=0}addReward(e){return this.nuggets+=e,this.score+=e,{nuggets:this.nuggets,score:this.score}}spendNuggets(e){return this.nuggets>=e&&(this.nuggets-=e,!0)}canAfford(e){return this.nuggets>=e}getState(){return{nuggets:this.nuggets,score:this.score}}reset(){this.nuggets=100,this.score=0}}const v=43,w=32,C="countdown",E="playing",A="gameOver";class S{constructor(){this.reset()}reset(){var e,t;this.status=C,this.countdown=10,this.mainBuilding=(e=Math.floor(21.5),t=Math.floor(16),{...b.baseStats,id:"main-command-center",type:"command-center",x:e,y:t,cells:b.shape.map(a=>({x:e+a.x,y:t+a.y})),isActive:!0,upgradeLevels:{},lastTurretAngle:0}),this.buildings=[],this.resources=new k(100),this.countdownStartTime=null}getState(){const e=this.resources.getState();return{status:this.status,countdown:this.countdown,mainBuilding:this.mainBuilding,buildings:this.buildings,nuggets:e.nuggets,score:e.score}}updateCountdown(){if(this.status!==C)return!1;this.countdownStartTime||(this.countdownStartTime=Date.now());const e=Math.floor((Date.now()-this.countdownStartTime)/1e3),t=Math.max(0,10-e);return t!==this.countdown&&(this.countdown=t,0===t&&(this.status=E,this.countdownStartTime=null),!0)}damageBuilding(e,t){if("main-command-center"===e){const e=Math.max(0,this.mainBuilding.health-t);return this.mainBuilding.health=e,0===e?(this.status=A,{gameOver:!0,building:this.mainBuilding}):{gameOver:!1,building:this.mainBuilding}}const a=this.buildings.findIndex(t=>t.id===e);if(-1===a)return{gameOver:!1,building:null};const n=this.buildings[a],i=Math.max(0,n.health-t);return n.health=i,n.isActive=i>0,n.isActive||this.buildings.splice(a,1),{gameOver:!1,building:n}}addEnemyKillReward(e){return this.resources.addReward(e)}spendNuggets(e){return this.resources.spendNuggets(e)}canAfford(e){return this.resources.canAfford(e)}addBuilding(e){this.buildings.push(e)}removeBuilding(e){const t=this.buildings.findIndex(t=>t.id===e);if(-1!==t){const e=this.buildings[t];return this.buildings.splice(t,1),e}return null}updateBuilding(e,t){if("main-command-center"===e)return this.mainBuilding=t,this.mainBuilding;const a=this.buildings.findIndex(t=>t.id===e);return-1!==a?(this.buildings[a]=t,this.buildings[a]):null}getAllBuildings(){return[...this.buildings,this.mainBuilding]}isPositionOccupied(e,t){return!!this.mainBuilding.cells.some(a=>a.x===e&&a.y===t)||this.buildings.some(a=>a.x===e&&a.y===t)}canBuildAt(e,t,a=null){return!(e<0||e>=v||t<0||t>=w||this.isPositionOccupied(e,t)||a&&a.isCellOccupied(e,t))}}const M={id:"wall",name:"Wall",description:"Defensive structure that blocks enemy movement.",baseStats:{health:300,maxHealth:300,attackDamage:0,attackRange:0,attackCooldown:0,projectileCount:0,lastAttackTime:0,spikeDamage:0},upgrades:{repair:{name:"Repair",description:"+150 HP",cost:3,effect:e=>({...e,health:Math.min(e.maxHealth,e.health+150)})},reinforce:{name:"Reinforce",description:"+100 Max HP",cost:5,effect:e=>({...e,maxHealth:e.maxHealth+100,health:e.health+100})}},canBuild:!0,buildCost:5,color:"#78909c",borderColor:"#546e7a"},B={id:"tower",name:"Guard Tower",description:"Attacks enemies within its range. High priority target for enemies.",baseStats:{health:150,maxHealth:150,attackDamage:10,attackRange:6,attackCooldown:500,projectileCount:1,lastAttackTime:0},upgrades:{damage:{name:"Damage",description:"+4 DMG",cost:40,effect:e=>({...e,attackDamage:e.attackDamage+4})},range:{name:"Range",description:"+1 Range",cost:30,effect:e=>({...e,attackRange:e.attackRange+1})},fireRate:{name:"Fire Rate",description:"-150ms Cooldown",cost:45,effect:e=>({...e,attackCooldown:Math.max(200,e.attackCooldown-150)})},projectiles:{name:"Multi-Shot",description:"+1 Projectile",cost:100,effect:e=>({...e,projectileCount:e.projectileCount+1})},repair:{name:"Repair",description:"+75 HP",cost:15,effect:e=>({...e,health:Math.min(e.maxHealth,e.health+75)})}},canBuild:!0,buildCost:35,color:"#27ae60",borderColor:"#229954"},T={id:"upgrade-center",name:"Upgrade Center",description:"Unlocks powerful global upgrades for all your structures.",baseStats:{health:400,maxHealth:400},upgrades:{spikes:{name:"Global Spikes",description:"All walls deal 10 damage to attackers.",cost:150,isGlobal:!0,effect:e=>({...e,spikeDamage:(e.spikeDamage||0)+10})},repair:{name:"Repair",description:"+100 HP",cost:15,effect:e=>({...e,health:Math.min(e.maxHealth,e.health+100)})}},canBuild:!0,buildCost:60,color:"#f1c40f",borderColor:"#f39c12"},P=[{type:"wall",config:M},{type:"tower",config:B},{type:"upgrade-center",config:T}],$={"command-center":b,wall:M,tower:B,"upgrade-center":T},H=e=>$[e]||null,R=(e,t,a)=>{const n=H(e.type),i=n?.upgrades?.[t];if(!i)return e;if(i.isGlobal)return i.effect(a);const s={...e.upgradeLevels||{}};return s[t]=(s[t]||0)+1,{...i.effect(e),upgradeLevels:s}},D=(e,t,a=1.5)=>{var n;const i=H(e.type),s=null!==(n=i?.upgrades?.[t]?.cost)&&void 0!==n?n:1/0,r=e.upgradeLevels?.[t]||0;return Math.round(s*Math.pow(a,r))};class N{constructor(e){this.canvas=e,this.context=e.getContext("2d")}calculateLayout(){const e=this.canvas.parentElement;this.canvas.width===e.clientWidth&&this.canvas.height===e.clientHeight||(this.canvas.width=e.clientWidth,this.canvas.height=e.clientHeight);const t=Math.floor(this.canvas.width/v),a=Math.floor(this.canvas.height/w),n=Math.min(t,a),i=v*n,s=w*n;return{actualCellSize:n,gridPixelWidth:i,gridPixelHeight:s,offsetX:(this.canvas.width-i)/2,offsetY:(this.canvas.height-s)/2}}clear(){this.context.fillStyle="#1a1a1a",this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}renderGrid(e){const{actualCellSize:t,gridPixelWidth:a,gridPixelHeight:n,offsetX:i,offsetY:s}=e;this.context.strokeStyle="#333",this.context.lineWidth=1;for(let e=0;e<=v;e++)this.context.beginPath(),this.context.moveTo(i+e*t,s),this.context.lineTo(i+e*t,s+n),this.context.stroke();for(let e=0;e<=w;e++)this.context.beginPath(),this.context.moveTo(i,s+e*t),this.context.lineTo(i+a,s+e*t),this.context.stroke()}renderBuilding(e,t,a=!1){const{actualCellSize:n,offsetX:i,offsetY:s}=t,r=H(e.type),l=r?.color||"#4a90e2",c=r?.borderColor||"#2c5aa0",o=(e,t)=>{const a=i+e*n,r=s+t*n;this.context.fillStyle=l,this.context.fillRect(a,r,n,n),this.context.strokeStyle=c,this.context.lineWidth=1,this.context.strokeRect(a,r,n,n)};"command-center"===e.type?e.cells.forEach(e=>o(e.x,e.y)):o(e.x,e.y),"tower"!==e.type&&"command-center"!==e.type||this.renderTurret(e,t),a&&this.renderSelectionHighlight(e,t)}renderTurret(e,t){const{actualCellSize:a,offsetX:n,offsetY:i}=t,s=n+e.x*a+a/2,r=i+e.y*a+a/2,l=.4*a,c=e.lastTurretAngle||0,o=s+Math.cos(c)*l,d=r+Math.sin(c)*l;this.context.strokeStyle="#bdc3c7",this.context.lineWidth=3,this.context.beginPath(),this.context.moveTo(s,r),this.context.lineTo(o,d),this.context.stroke()}renderSelectionHighlight(e,t){const{actualCellSize:a,offsetX:n,offsetY:i}=t;this.context.strokeStyle="#32cd32",this.context.lineWidth=3,(e.cells||[{x:e.x,y:e.y}]).forEach(e=>{this.context.strokeRect(n+e.x*a,i+e.y*a,a,a)})}renderHealthBar(e,t){const{actualCellSize:a,offsetX:n,offsetY:i}=t;let s=a-4,r=n+e.x*a+2,l=i+e.y*a+a;"command-center"===e.type&&(s=3*a-4,r=n+(e.x-1)*a+2,l=i+(e.y+1)*a+a),u(this.context,r,l,s,e.health,e.maxHealth,5)}renderHealthBarsAll(e,t){e.forEach(e=>{e.health>=e.maxHealth||this.renderHealthBar(e,t)})}renderBuildings(e,t,a=null){e.forEach(e=>{const n=a&&a.id===e.id;this.renderBuilding(e,t,n)})}renderBuildSelection(e,t,a=!0){const{actualCellSize:n,offsetX:i,offsetY:s}=t,r=i+e.x*n,l=s+e.y*n;this.context.strokeStyle=a?"#32cd32":"#e74c3c",this.context.lineWidth=3,this.context.strokeRect(r,l,n,n)}renderGameOverOverlay(){this.context.fillStyle="rgba(0, 0, 0, 0.7)",this.context.fillRect(0,0,this.canvas.width,this.canvas.height),this.context.font="40px Arial",this.context.fillStyle="white",this.context.textAlign="center",this.context.fillText("GAME OVER",this.canvas.width/2,this.canvas.height/2)}renderCountdownOverlay(e){this.context.font="60px Arial",this.context.fillStyle="rgba(255, 255, 255, 0.8)",this.context.textAlign="center",this.context.fillText(e,this.canvas.width/2,80),this.context.font="20px Arial",this.context.fillText("Prepare your defenses!",this.canvas.width/2,120)}renderResourceUI(e,t){((e,t,a,n)=>{e.fillStyle="white",e.font="bold 18px Arial",e.textAlign="left",e.fillText(`Score: ${a}`,10,25),e.fillText(`Nuggets: ${n} 💎`,10,50)})(this.context,this.canvas.width,e,t)}render(e,t,a,n,i){const s=this.calculateLayout();this.clear(),this.renderGrid(s);const r=[e.mainBuilding,...e.buildings];return this.renderBuildings(r,s,t),this.renderHealthBarsAll(r,s),t&&"build"===t.type&&this.renderBuildSelection(t,s,a),n&&n.render(this.context,s.offsetX,s.offsetY,s.actualCellSize),i&&i.render(this.context,s.offsetX,s.offsetY,s.actualCellSize),this.renderResourceUI(e.score,e.nuggets),"gameOver"===e.status&&this.renderGameOverOverlay(),"countdown"===e.status&&e.countdown>0&&this.renderCountdownOverlay(e.countdown),s}}const O=({building:e,nuggets:t,onUpgrade:a,onSell:i,onClose:s,onBuild:r,mode:l="upgrade",isBuildLocationValid:c=!0})=>{if(!e&&"build"!==l)return null;if("build"===l){const e=e=>t>=e,a=!c;return(0,n.createElement)("div",{className:"building-panel visible"},(0,n.createElement)("div",{className:"panel-header"},(0,n.createElement)("h3",null,"Build Menu"),(0,n.createElement)("button",{onClick:s,className:"close-button"},"×")),(0,n.createElement)("div",{className:"panel-main"},(0,n.createElement)("div",{className:"panel-content"},(0,n.createElement)("p",null,"Nuggets: ",(0,n.createElement)("span",{className:"stat-value"},t,"💎")),a?(0,n.createElement)("p",{className:"location-invalid-message"},"Cannot build here: Location is blocked by an enemy."):(0,n.createElement)("p",null,"Select a building to construct:")),(0,n.createElement)("div",{className:"panel-builds"},P.map(({type:t,config:i})=>(0,n.createElement)("button",{key:t,onClick:()=>r(t),disabled:!e(i.buildCost)||a,className:"build-button",title:a?"Location is blocked":""},(0,n.createElement)("div",{className:"build-title"},i.name),(0,n.createElement)("div",{className:"build-description"},i.description),(0,n.createElement)("div",{className:"build-cost"},i.buildCost,"💎"))))))}const o=H(e.type);if(!o)return null;const d=a=>((e,t,a)=>a>=D(e,t))(e,a,t),h=e=>d(e)?"upgrade-button":"upgrade-button disabled",u=(e,t,a="")=>(0,n.createElement)("p",{key:e},e,": ",(0,n.createElement)("span",{className:"stat-value"},t,a)),g="command-center"!==e.type,m=e&&e.buildCost?Math.floor(e.health/e.maxHealth*e.buildCost):0;return(0,n.createElement)("div",{className:"building-panel visible"},(0,n.createElement)("div",{className:"panel-header"},(0,n.createElement)("h3",null,o.name),(0,n.createElement)("button",{onClick:s,className:"close-button"},"×")),(0,n.createElement)("div",{className:"panel-main"},(0,n.createElement)("div",{className:"panel-content"},(()=>{const t=[];return t.push(u("Health",`${Math.round(e.health)} / ${e.maxHealth}`)),e.attackDamage>0&&(t.push(u("Damage",e.attackDamage)),t.push(u("Range",e.attackRange)),t.push(u("Fire Rate",(1e3/e.attackCooldown).toFixed(2),"/s")),e.projectileCount>1&&t.push(u("Projectiles",e.projectileCount))),e.spikeDamage>0&&t.push(u("Spike Damage",e.spikeDamage)),t})()),(0,n.createElement)("div",{className:"panel-upgrades"},Object.entries(o.upgrades).map(([t,i])=>{const s=D(e,t);return(0,n.createElement)("button",{key:t,onClick:()=>a(t),disabled:!d(t),className:h(t)},(0,n.createElement)("div",{className:"upgrade-title"},i.name),(0,n.createElement)("div",{className:"upgrade-effect"},i.description),(0,n.createElement)("div",{className:"upgrade-cost"},s,"💎"))})),g&&(0,n.createElement)("div",{className:"panel-sell"},(0,n.createElement)("button",{onClick:()=>i(e.id),className:"sell-button"},"Sell Building",(0,n.createElement)("span",{className:"sell-amount"},"+",m,"💎")))))},j=(e,t)=>Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2);class W{constructor(e){this.projectileManager=e}update(e,t,a){const n=t.getEnemies();0!==n.length&&e.forEach(e=>{if(e.attackDamage<=0)return;if(a-e.lastAttackTime<e.attackCooldown)return;const t=n.filter(t=>j(t,e)<=e.attackRange);if(0===t.length)return;const i=t.sort((t,a)=>j(t,e)-j(a,e)).slice(0,e.projectileCount||1),s=i[0];e.lastTurretAngle=Math.atan2(s.y-e.y,s.x-e.x),i.forEach(t=>{this.projectileManager.createProjectile(e,t,e.attackDamage)}),e.lastAttackTime=a})}}console.log("Hello World! (from chubes-games-base-builder block)");const I=i().forwardRef(({selectedBuilding:e,setSelectedBuilding:t,setNuggets:a,setGameStatus:s,onBuildLocationValidityChange:r,globalUpgrades:c},o)=>{const d=(0,l.useRef)(null),h=(0,l.useRef)(null),u=(0,l.useRef)(null),g=(0,l.useRef)(null),m=(0,l.useRef)(null),f=(0,l.useRef)(null),[p,b]=(0,l.useState)(null),[k,C]=(0,l.useState)(!0),P=(0,l.useRef)(null);(0,l.useEffect)(()=>{h.current=new S,u.current=new N(d.current),g.current=new y(v,w),m.current=new x,P.current=new W(m.current),b(h.current.getState())},[]),(0,l.useEffect)(()=>{r&&r(k)},[k,r]),(0,l.useEffect)(()=>{p&&(s(p.status),a(p.nuggets))},[p,s,a]),(0,l.useEffect)(()=>{const e=d.current,a=a=>{if(!p||p.status===A)return;const n=e.getBoundingClientRect(),i=u.current.calculateLayout(),s=a.clientX-n.left,r=a.clientY-n.top,l=function(e,t,a){if(e<0||e>=v||t<0||t>=w)return{mode:"none"};if(a.mainBuilding.cells.some(a=>a.x===e&&a.y===t))return{mode:"command-center",building:a.mainBuilding};const n=a.buildings.find(a=>a.x===e&&a.y===t);return n?{mode:"building",building:n}:{mode:"build",x:e,y:t}}(Math.floor((s-i.offsetX)/i.actualCellSize),Math.floor((r-i.offsetY)/i.actualCellSize),p);switch(l.mode){case"command-center":case"building":t(l.building);break;case"build":t({type:"build",x:l.x,y:l.y})}};return e.addEventListener("click",a),()=>e.removeEventListener("click",a)},[p,t]);const $=(0,l.useCallback)(()=>{b(h.current.getState())},[]),O=(0,l.useCallback)((e,a)=>{h.current.damageBuilding(e,a).gameOver&&t(null),$()},[$,t]),j=(0,l.useCallback)(e=>{h.current.addEnemyKillReward(e.reward||1),$()},[$]),I=(0,l.useCallback)((e,t)=>{g.current&&g.current.damageEnemy(e,t,j)},[j]);return i().useImperativeHandle(o,()=>({handleUpgrade:a=>{if(!e)return{success:!1};const n=function(e,t,a,n){const i=D(t,a),s=H(t.type),r=s?.upgrades?.[a];if(!r)return{success:!1,reason:"invalid-upgrade"};if(!e.canAfford(i))return{success:!1,reason:"no-funds",cost:i};if(!e.spendNuggets(i))return{success:!1,reason:"spend-failed"};if(r.isGlobal)return{success:!0,cost:i,globalUpgrades:R(t,a,n)};const l=R(t,a);return e.updateBuilding(t.id,l),{success:!0,cost:i,updatedBuilding:l}}(h.current,e,a,c);return n.success&&(n.updatedBuilding&&t(n.updatedBuilding),n.globalUpgrades&&setGlobalUpgrades(n.globalUpgrades),$()),n},handleSell:e=>{(function(e,t){const a=e.removeBuilding(t);if(!a)return{success:!1};const n=(e=>Math.floor(e.health/e.maxHealth*e.buildCost))(a);return e.resources.nuggets+=n,{success:!0,refund:n}})(h.current,e).success&&$(),t(null)},handleBuild:(e,t,a)=>{const n=H(e);if(n&&h.current.canAfford(n.buildCost))if(h.current.canBuildAt(t,a,g.current)){if(h.current.spendNuggets(n.buildCost)){const n=((e,t,a)=>{switch(e){case"wall":return((e,t)=>({...M.baseStats,id:`wall-${Date.now()}-${Math.random()}`,type:"wall",x:e,y:t,isActive:!0,upgradeLevels:{},spikeDamage:0,buildCost:M.buildCost}))(t,a);case"tower":return((e,t)=>({...B.baseStats,lastTurretAngle:0,id:`tower-${Date.now()}-${Math.random()}`,type:"tower",x:e,y:t,isActive:!0,upgradeLevels:{},buildCost:B.buildCost}))(t,a);case"upgrade-center":return((e,t)=>({...T.baseStats,id:`upgrade-center-${Date.now()}-${Math.random()}`,type:"upgrade-center",x:e,y:t,isActive:!0,upgradeLevels:{},buildCost:T.buildCost}))(t,a);default:return null}})(e,t,a);h.current.addBuilding(n),$()}}else console.error("Build failed: Invalid location.")},resetGame:()=>{h.current.reset(),g.current=new y(v,w),m.current=new x,P.current=new W(m.current),t(null),$()}})),(0,l.useEffect)(()=>{p&&t(e=>e&&"build"!==e.type?"main-command-center"===e.id?p.mainBuilding:p.buildings.find(t=>t.id===e.id)||null:e)},[p,t]),(0,l.useEffect)(()=>{if(!p)return;const t=()=>{if(h.current.updateCountdown()&&$(),e&&"build"===e.type){const t=h.current.canBuildAt(e.x,e.y,g.current);t!==k&&C(t)}if(u.current.render(p,e,k,g.current,m.current),p.status===E){const e=Date.now(),t=h.current.getAllBuildings();P.current.update(t,g.current,e),g.current&&g.current.update(t,O,c),m.current&&m.current.update(g.current.getEnemies(),I)}f.current=window.requestAnimationFrame(t)};return t(),()=>{f.current&&window.cancelAnimationFrame(f.current)}},[p,e,k,$,O,I,c]),(0,n.createElement)("canvas",{ref:d})}),L=()=>{const[e,t]=(0,l.useState)(null),[a,i]=(0,l.useState)(100),[s,r]=(0,l.useState)(C),[o,d]=(0,l.useState)(!0),[h,u]=(0,l.useState)({spikeDamage:0}),g=(0,l.useRef)(null),m="build"===e?.type?"build":"upgrade",f="build"===e?.type?null:e;return(0,n.createElement)(c,null,(0,n.createElement)(I,{ref:g,selectedBuilding:e,setSelectedBuilding:t,setNuggets:i,setGameStatus:r,onBuildLocationValidityChange:d,globalUpgrades:h}),s===A&&(0,n.createElement)("div",{className:"game-over-overlay"},(0,n.createElement)("button",{onClick:()=>{t(null),i(100),g.current&&g.current.resetGame()},className:"play-again-button"},"Play Again")),(0,n.createElement)(O,{building:f,nuggets:a,onUpgrade:t=>{if(!e)return;const n=D(e,t);if(!(a<n)&&g.current){const e=g.current.handleUpgrade(t);e?.success&&(i(t=>t-e.cost),e.globalUpgrades&&u(e.globalUpgrades))}},onSell:e=>{g.current&&g.current.handleSell(e)},onClose:()=>t(null),onBuild:a=>{g.current&&e&&"build"===e.type&&(g.current.handleBuild(a,e.x,e.y),t(null))},mode:m,isBuildLocationValid:o}))};document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".wp-block-chubes-games-base-builder").forEach(e=>{r().render((0,n.createElement)(L,null),e)})})}},a={};function n(e){var i=a[e];if(void 0!==i)return i.exports;var s=a[e]={exports:{}};return t[e](s,s.exports,n),s.exports}n.m=t,e=[],n.O=(t,a,i,s)=>{if(!a){var r=1/0;for(d=0;d<e.length;d++){for(var[a,i,s]=e[d],l=!0,c=0;c<a.length;c++)(!1&s||r>=s)&&Object.keys(n.O).every(e=>n.O[e](a[c]))?a.splice(c--,1):(l=!1,s<r&&(r=s));if(l){e.splice(d--,1);var o=i();void 0!==o&&(t=o)}}return t}s=s||0;for(var d=e.length;d>0&&e[d-1][2]>s;d--)e[d]=e[d-1];e[d]=[a,i,s]},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={434:0,707:0};n.O.j=t=>0===e[t];var t=(t,a)=>{var i,s,[r,l,c]=a,o=0;if(r.some(t=>0!==e[t])){for(i in l)n.o(l,i)&&(n.m[i]=l[i]);if(c)var d=c(n)}for(t&&t(a);o<r.length;o++)s=r[o],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return n.O(d)},a=globalThis.webpackChunkchubes_games=globalThis.webpackChunkchubes_games||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();var i=n.O(void 0,[707],()=>n(346));i=n.O(i)})();